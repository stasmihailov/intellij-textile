{
  parserClass="org.potniype4kin.textile.parser.TextileParser"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="Textile"
  psiImplClassSuffix="Impl"
  psiPackage="org.potniype4kin.textile.psi"
  psiImplPackage="org.potniype4kin.textile.psi.impl"

  elementTypeHolderClass="org.potniype4kin.textile.psi.TextileType"
  elementTypeClass="org.potniype4kin.textile.psi.TextileElement"
  tokenTypeClass="org.potniype4kin.textile.psi.TextileToken"

  psiImplUtilClass="org.potniype4kin.textile.psi.impl.TextilePsiImplUtil"
}

textileFile ::= item*


private header_text ::= HEADER_TEXT (space HEADER_TEXT)*
private header ::= HEADER_START header_text

private code_start ::= space? CODE_DEF (CODE_DELIM CODE_LANGUAGE)? CODE_DEF_END
private code_line ::= space? CODE+
private code_end ::= space? CODE_END
private code ::= code_start eol? (code_line eol?)+ code_end

private code_inline ::= INLINE_CODE_START space? CODE+ space? INLINE_CODE_END

private info_start ::= space? INFO_START+
private info_text ::= INFO_TEXT+
private info_end ::= space? INFO_END
private info ::= info_start+ eol? (info_text eol?)+ info_end

private list_text ::= LIST_TEXT (space LIST_TEXT)*
private list ::= LIST_DELIM list_text

private text ::= TEXT (space TEXT)*
private space ::= SPACE
private signs ::= SIGN_WARNING | SIGN_PLUS | SIGN_MINUS | SIGN_OK | SIGN_QUESTION
private chapter_break ::= CHAPTER_BREAK
private paragraph_break ::= PARAGRAPH_BREAK
private eol ::= space? EOL
private item ::= header
    | list
    | code
    | code_inline
    | info
    | text
    | chapter_break
    | paragraph_break
    | signs
    | space
    | eol
